// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:android_flutter_app/models/banner_info_entity.dart';
import 'package:android_flutter_app/generated/json/banner_info_entity_helper.dart';
import 'package:android_flutter_app/models/article_list_entity.dart';
import 'package:android_flutter_app/generated/json/article_list_entity_helper.dart';
import 'package:android_flutter_app/models/chapter_entity.dart';
import 'package:android_flutter_app/generated/json/chapter_entity_helper.dart';
import 'package:android_flutter_app/models/web_site_entity.dart';
import 'package:android_flutter_app/generated/json/web_site_entity_helper.dart';
import 'package:android_flutter_app/models/skill_category_entity.dart';
import 'package:android_flutter_app/generated/json/skill_category_entity_helper.dart';
import 'package:android_flutter_app/dio/errro_msg_entity.dart';
import 'package:android_flutter_app/generated/json/errro_msg_entity_helper.dart';
import 'package:android_flutter_app/models/user_entity.dart';
import 'package:android_flutter_app/generated/json/user_entity_helper.dart';
import 'package:android_flutter_app/models/hot_key_entity.dart';
import 'package:android_flutter_app/generated/json/hot_key_entity_helper.dart';
import 'package:android_flutter_app/models/picture_entity.dart';
import 'package:android_flutter_app/generated/json/picture_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case BannerInfoEntity:
			return bannerInfoEntityFromJson(data as BannerInfoEntity, json) as T;			case ArticleListEntity:
			return articleListEntityFromJson(data as ArticleListEntity, json) as T;			case ArticleListData:
			return articleListDataFromJson(data as ArticleListData, json) as T;			case ChapterEntity:
			return chapterEntityFromJson(data as ChapterEntity, json) as T;			case WebSiteEntity:
			return webSiteEntityFromJson(data as WebSiteEntity, json) as T;			case SkillCategoryEntity:
			return skillCategoryEntityFromJson(data as SkillCategoryEntity, json) as T;			case SkillCategorychild:
			return skillCategorychildFromJson(data as SkillCategorychild, json) as T;			case ErrorMsgEntity:
			return errorMsgEntityFromJson(data as ErrorMsgEntity, json) as T;			case UserEntity:
			return userEntityFromJson(data as UserEntity, json) as T;			case HotKeyEntity:
			return hotKeyEntityFromJson(data as HotKeyEntity, json) as T;			case PictureEntity:
			return pictureEntityFromJson(data as PictureEntity, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case BannerInfoEntity:
			return bannerInfoEntityToJson(data as BannerInfoEntity);			case ArticleListEntity:
			return articleListEntityToJson(data as ArticleListEntity);			case ArticleListData:
			return articleListDataToJson(data as ArticleListData);			case ChapterEntity:
			return chapterEntityToJson(data as ChapterEntity);			case WebSiteEntity:
			return webSiteEntityToJson(data as WebSiteEntity);			case SkillCategoryEntity:
			return skillCategoryEntityToJson(data as SkillCategoryEntity);			case SkillCategorychild:
			return skillCategorychildToJson(data as SkillCategorychild);			case ErrorMsgEntity:
			return errorMsgEntityToJson(data as ErrorMsgEntity);			case UserEntity:
			return userEntityToJson(data as UserEntity);			case HotKeyEntity:
			return hotKeyEntityToJson(data as HotKeyEntity);			case PictureEntity:
			return pictureEntityToJson(data as PictureEntity);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'BannerInfoEntity':
			return BannerInfoEntity().fromJson(json);			case 'ArticleListEntity':
			return ArticleListEntity().fromJson(json);			case 'ArticleListData':
			return ArticleListData().fromJson(json);			case 'ChapterEntity':
			return ChapterEntity().fromJson(json);			case 'WebSiteEntity':
			return WebSiteEntity().fromJson(json);			case 'SkillCategoryEntity':
			return SkillCategoryEntity().fromJson(json);			case 'SkillCategorychild':
			return SkillCategorychild().fromJson(json);			case 'ErrorMsgEntity':
			return ErrorMsgEntity().fromJson(json);			case 'UserEntity':
			return UserEntity().fromJson(json);			case 'HotKeyEntity':
			return HotKeyEntity().fromJson(json);			case 'PictureEntity':
			return PictureEntity().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'BannerInfoEntity':
			return List<BannerInfoEntity>();			case 'ArticleListEntity':
			return List<ArticleListEntity>();			case 'ArticleListData':
			return List<ArticleListData>();			case 'ChapterEntity':
			return List<ChapterEntity>();			case 'WebSiteEntity':
			return List<WebSiteEntity>();			case 'SkillCategoryEntity':
			return List<SkillCategoryEntity>();			case 'SkillCategorychild':
			return List<SkillCategorychild>();			case 'ErrorMsgEntity':
			return List<ErrorMsgEntity>();			case 'UserEntity':
			return List<UserEntity>();			case 'HotKeyEntity':
			return List<HotKeyEntity>();			case 'PictureEntity':
			return List<PictureEntity>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}